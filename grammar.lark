%import common.CNAME
%import common.WS
%import common.NUMBER
%ignore WS

start: programme

programme: txt | txt programme
            | dumbo_bloc | dumbo_bloc programme

txt: /[^{}]+/

dumbo_bloc: "{{" expressions_list "}}"

expressions_list: expression ";" expressions_list
                | expression ";"

expression: "print" string_expression
            | for_loop
            | variable ":=" string_expression
            | variable ":=" string_list
            | integer_expression
            | boolean_expression
            | if_statement

for_loop: "for" variable "in" string_list "do" expressions_list "endfor"
            | "for" variable "in" variable "do" expressions_list "endfor"

if_statement: "if" boolean_expression "do" expressions_list "endif"

add_op: "+"
sub_op: "-"
mul_op: "*"
div_op: "//"

additive_op: add_op | sub_op

multiplicative_op: mul_op | div_op
operator: additive_op | multiplicative_op

integer_expression: term
                  | integer_expression additive_op term

term: factor
    | term multiplicative_op factor

factor: integer
        | variable
        | SUB_OP factor
        | "(" integer_expression ")"


boolean_expression: boolean
                    | boolean_expression OR boolean_expression
                    | boolean_expression AND boolean_expression
                    | NOT boolean_expression 
                    | "(" boolean_expression ")"
                    | integer_comparison

integer_comparison: integer_expression COMP integer_expression

string: /'[^']*'/
string_expression:  string
                    | variable
                    | string_expression "." string_expression

string_list: "(" string_list_interior ")"

string_list_interior: string
                    | string "," string_list_interior


TRUE : "true"
FALSE: "false"
AND: "and"
OR : "or"
NOT: "not"
SUB_OP: "-"

COMP: "<" | ">" | "=" | "!="

boolean: TRUE | FALSE
integer: NUMBER
variable: CNAME